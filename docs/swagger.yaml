definitions:
  dtos.DepositAccountDto:
    properties:
      accountId:
        type: integer
      value:
        type: number
    type: object
  dtos.GetAccountStatementDto:
    properties:
      accountId:
        type: integer
      firstSortCriteria:
        type: string
      page:
        type: integer
      pageSize:
        type: integer
      secondSortCriteria:
        type: string
    type: object
  dtos.GetBalanceDto:
    properties:
      accountId:
        type: integer
    type: object
  dtos.MakeInternalTransferDto:
    properties:
      receiverId:
        type: integer
      senderId:
        type: integer
      value:
        type: number
    type: object
  dtos.ReservationDto:
    properties:
      accountId:
        type: integer
      orderId:
        type: integer
      serviceId:
        type: integer
      totalCost:
        type: number
    type: object
  dtos.WithdrawAccountDto:
    properties:
      accountId:
        type: integer
      value:
        type: number
    type: object
  errors.ResponseError:
    properties:
      reason:
        type: string
    type: object
  models.Account:
    properties:
      accountId:
        type: integer
      balance:
        type: number
    type: object
  models.AccountantReportElem:
    properties:
      serviceName:
        type: string
      totalReceived:
        type: number
    type: object
  models.StatementElem:
    properties:
      amount:
        type: number
      description:
        type: string
      recordTime:
        type: string
      transferType:
        type: string
    type: object
info:
  contact: {}
  description: Balance service for avito internship
  title: Balance microservice
  version: "1.0"
paths:
  /accountant-report:
    get:
      description: collects information about accepted reservations
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.AccountantReportElem'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ResponseError'
      summary: GetAccountantReport
      tags:
      - accountant
  /balance/deposit:
    post:
      consumes:
      - application/json
      description: deposit account if account exists, otherwise creates an account
        and deposi it
      parameters:
      - description: account id and value to deposit
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/dtos.DepositAccountDto'
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ResponseError'
      summary: Deposit
      tags:
      - balance
  /balance/get:
    get:
      consumes:
      - application/json
      description: return balance of the account with given id
      parameters:
      - description: account id
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/dtos.GetBalanceDto'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Account'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ResponseError'
      summary: GetBalance
      tags:
      - balance
  /balance/statement:
    get:
      consumes:
      - application/json
      description: collects information about all transfers related to given account
      parameters:
      - description: account id
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/dtos.GetAccountStatementDto'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.StatementElem'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ResponseError'
      summary: GetStatement
      tags:
      - balance
  /balance/transfer:
    post:
      consumes:
      - application/json
      description: transfers money between two given accounts
      parameters:
      - description: transfer info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/dtos.MakeInternalTransferDto'
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ResponseError'
      summary: ProcessInternalTransfer
      tags:
      - balance
  /balance/withdraw:
    post:
      consumes:
      - application/json
      description: withdraw account if account exists and has enough money
      parameters:
      - description: account id and value to withdraw
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/dtos.WithdrawAccountDto'
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ResponseError'
      summary: Withdraw
      tags:
      - balance
  /reservation/accept:
    post:
      consumes:
      - application/json
      description: accept reserved reservation
      parameters:
      - description: reservation info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/dtos.ReservationDto'
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ResponseError'
      summary: AcceptReservation
      tags:
      - reservation
  /reservation/cancel:
    post:
      consumes:
      - application/json
      description: cancel reserved reservation
      parameters:
      - description: reservation info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/dtos.ReservationDto'
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ResponseError'
      summary: CancelReservation
      tags:
      - reservation
  /reservation/make:
    post:
      consumes:
      - application/json
      description: create reservation
      parameters:
      - description: reservation info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/dtos.ReservationDto'
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ResponseError'
      summary: MakeReservation
      tags:
      - reservation
swagger: "2.0"
